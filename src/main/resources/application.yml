spring:
  application:
    name: real-time-data-pipeline
  
  # Database Configuration - Disabled for now
  # datasource:
  #   url: jdbc:postgresql://localhost:5432/realtimedb
  #   username: rtuser
  #   password: rtpassword
  #   driver-class-name: org.postgresql.Driver
  #   hikari:
  #     maximum-pool-size: 20
  #     minimum-idle: 5
  #     idle-timeout: 300000
  #     connection-timeout: 20000

  # JPA Configuration - Disabled for now
  # jpa:
  #   hibernate:
  #     ddl-auto: update
  #   show-sql: false
  #   properties:
  #     hibernate:
  #       dialect: org.hibernate.dialect.PostgreSQLDialect
  #       format_sql: true
  #   database-platform: org.hibernate.dialect.PostgreSQLDialect

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
      properties:
        enable.idempotence: true
    consumer:
      group-id: real-time-trading-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: true
      properties:
        spring.json.trusted.packages: "com.realtime.realtimedatapipeline.model"

  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      jedis:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

# Server Configuration
server:
  port: 8090

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Logging
logging:
  level:
    com.realtime.realtimedatapipeline: INFO
    org.springframework.kafka: WARN
    org.apache.kafka: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Custom Application Properties
app:
  # Finnhub API Configuration
  finnhub:
    api-key: ${FINNHUB_API_KEY:your-api-key-here}
    base-url: https://finnhub.io/api/v1
    timeout: 30s
    
  # Stock Configuration - Easy to modify
  stocks:
    symbols:
      - AAPL
      - GOOGL  
      - MSFT
      - TSLA
      - AMZN
      - META
      - NFLX
      - NVDA
    update-interval: 10s  # How often to fetch data
    
  # Kafka Topics
  kafka:
    topics:
      stock-quotes-raw: stock-quotes-raw
      stock-quotes-processed: stock-quotes-processed
      stock-alerts: stock-alerts
      stock-analytics: stock-analytics
      
  # Alert Configuration
  alerts:
    price-change-threshold: 5.0  # Alert if price changes more than 5%
    enabled: true
    
  # Analytics Configuration  
  analytics:
    calculation-window: 1h  # Calculate analytics every hour
    enabled: true